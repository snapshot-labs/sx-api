scalar Id
scalar Text

type Space {
  id: String!
  name: String
  about: String
  external_url: String
  github: String
  twitter: String
  discord: String
  wallet: String
  controller: String
  voting_delay: Int
  min_voting_period: Int
  max_voting_period: Int
  proposal_threshold: Int
  strategies: [String]
  strategies_params: [String]
  strategies_metadata: [String]
  authenticators: [String]
  validation_strategy: String!
  validation_strategy_params: String!
  voting_power_validation_strategy_strategies: [String]
  voting_power_validation_strategy_strategies_params: [String]
  proposal_count: Int
  vote_count: Int
  created: Int
  tx: String
  proposals: [Proposal]! @derivedFrom(field: "space")
}

type Proposal {
  id: String!
  proposal_id: Int
  space: Space
  author: User
  execution_hash: String
  metadata_uri: String
  title: Text
  body: Text
  discussion: Text
  execution: Text
  start: Int
  min_end: Int
  max_end: Int
  snapshot: Int
  strategies: [String]
  strategies_params: [String]
  scores_1: Float
  scores_2: Float
  scores_3: Float
  scores_total: Float
  quorum: Float
  created: Int
  tx: String
  vote_count: Int
  executed: Boolean
}

type Vote {
  id: String!
  voter: User
  space: Space
  proposal: Int
  choice: Int
  vp: Float
  created: Int
}

type User {
  id: String!
  proposal_count: Int
  vote_count: Int
  created: Int
  proposals: [Proposal]! @derivedFrom(field: "author")
  votes: [Vote]! @derivedFrom(field: "voter")
}
